The ``print_square`` module
======================

Using ``print_square``
-------------------


Write a function that prints a square with the character #.

    Prototype: def print_square(size):
    size is the size length of the square
    
	size must be an integer, otherwise raise a TypeError
	exception with the message size must be an integer

    if size is less than 0, raise a ValueError exception
	with the message size must be >= 0

    if size is a float and is less than 0, 
	raise a TypeError exception with the message size must be an integer

"""
>>> print_square = __import__('4-print_square').print_square
>>> size = None
>>> print_square(size)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 6, in print_square
TypeError: size must be an integer
>>> size = 0
>>> print_square(size)
>>> 
>>> size = -1
>>> print_square(size)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 8, in print_square
ValueError: size must be >= 0
>>> size = -13.5
>>> print_square(size)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 6, in print_square
TypeError: size must be an integer
>>>
